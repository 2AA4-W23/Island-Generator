package ca.mcmaster.cas.se2aa4.island.CityGen.MarkovNameGen;

import java.util.Random;

import ca.mcmaster.cas.se2aa4.island.RandomNumberGenerator.RandomNumber;

public class NameGenerator {

    private static int[][] letters = {{0,9,11,21,21,21,26,29,36,37,44,54,59,96,98,100,100,111,115,118,118,118,118,118,119,120,120},
    {13,13,13,13,16,16,16,16,19,19,19,20,20,20,23,23,23,24,24,24,32,32,32,32,32,32,32},
    {4,4,5,5,6,6,6,14,14,14,14,14,14,14,16,16,16,17,17,17,17,17,17,17,17,17,17},
    {11,11,11,12,16,16,16,18,18,19,19,19,19,20,22,22,22,25,25,25,28,28,28,28,28,28,28},
    {1,1,1,3,3,4,4,5,8,8,8,12,12,22,24,24,24,30,33,33,33,34,34,35,37,37,37},
    {0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,3,3,3,3,3,3,3},
    {4,4,4,6,6,6,6,8,10,10,12,12,12,12,18,18,19,19,20,20,23,23,23,23,24,28,28},
    {18,18,18,19,28,28,28,28,32,32,32,32,33,33,42,42,42,43,43,43,45,45,45,45,47,47,47},
    {6,7,9,12,15,15,15,15,15,17,17,18,19,33,33,34,34,36,39,39,39,39,39,40,41,42,42},
    {5,5,5,5,6,6,6,6,11,11,11,11,11,11,13,13,13,13,13,13,13,13,13,13,13,13,13},
    {16,16,16,16,16,17,17,18,21,21,21,21,21,21,25,25,25,25,25,25,27,27,27,27,28,28,28},
    {7,8,8,8,10,10,11,12,16,16,17,18,18,18,22,22,22,22,23,23,26,26,26,26,26,26,26},
    {5,7,7,7,10,10,10,10,12,12,12,12,12,12,16,17,17,17,18,18,19,19,19,19,19,19,19},
    {9,10,12,15,20,20,45,45,47,48,50,50,52,56,58,59,59,59,62,67,67,67,67,67,68,69,69},
    {0,1,1,1,2,2,3,7,8,8,12,13,14,25,25,25,25,30,34,35,46,46,48,48,49,49,49},
    {2,2,2,2,3,3,3,4,4,4,4,5,5,5,6,6,6,6,6,6,8,8,8,8,9,9,9},
    {0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
    {10,12,13,14,20,20,23,23,28,28,28,29,29,30,34,34,34,35,36,40,42,42,42,42,42,42,42},
    {7,10,12,12,14,14,14,22,23,23,23,23,23,23,23,23,23,23,24,26,29,29,29,29,30,30,30},
    {7,7,7,7,10,10,10,11,13,13,13,13,13,13,18,18,18,19,19,19,19,19,19,19,19,19,19},
    {4,4,4,4,4,4,4,5,5,6,6,10,12,18,18,18,18,28,31,31,31,31,31,31,31,33,33},
    {0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1},
    {1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
    {7,7,7,10,10,10,10,10,10,10,10,10,10,10,13,13,13,13,13,13,13,13,13,13,13,13,13},
    {1,1,1,1,1,1,1,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}};

    private static int[] rowSum = {120,32,17,28,37,3,28,47,42,13,28,26,19,69,49,9,2,42,30,19,33,1,1,2,13,10,0};
    //Precomputed training data

    public static String generateName(){
        String name = "";
        Random rng = RandomNumber.getRandomInstance();
        int length = rng.nextInt(5,10);
        int seed = 97 + rng.nextInt(26);
        char next = ' ';
        for(int i = 0; i < length; i++) {
            name += (char) seed;
            if(i >= 1) 
            if(name.charAt(i) == name.charAt(i-1)) {
                name = name.substring(0, i);
                i--;
            }
            
            int newLetter = rng.nextInt(Math.max(rowSum[seed-97],1));
            for(int j = 1; j < letters.length; j++) {
				if(newLetter >= letters[seed-97][j-1] && newLetter <= letters[seed-97][j] ) {
					next = (char)(j+97);
					seed = next;
					break;
				}
			}
        }
        return name;
    }
}
