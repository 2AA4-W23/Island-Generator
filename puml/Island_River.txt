@startuml

package RiverGen {
    class AddRivers {
        -addRivers(tiles: List<Polygon>, segments: List<Segment>, vertices: List<Vertex>, numRivers: int): List<Segment>
        +traverseVertices(): List<Object>
        #addRiverProps(river: List<Segment>, allSegments: List<Segment>, riverNumber: int, thickenss: int): List<Segment>
        ~getThickness(segment: Segment, thick: int): int
        -isWaterVertex(v: Vertex, vertices, G: VertexPolygonConnections, tiles): boolean
        +addEndorheicLake(tiles, vertices, segments, initialPoint: Vertex, G, num: int): boolean
        #getNextVertex(v: Vertex, vertices, G: VertexGraph): Vertex
        ~getAltitude(v: Vertex): int
        -checkEligibleLakeTile(tile, tiles: List<Polygon>, segments, vertices, G): boolean
        +getInitialLakeTile(tiles, vertices, segments, initialPoint, G): Polygon
    }
}

package Extracators {
    interface Extractor {
        -List<> properties
        -extractValues(): String
    }
    class AltitudeExtractor {
        -List<> properties
        -^extractValues()
    }
    class EdgeTagExtractor {
        -List<> properties
        -^extractValues()
    }
    class NumRiversExtractor {
        -List<> properties
        -^extractValues()
    }
    class RiverExtractor {
        -List<> properties
        -^extractValues()
    }
    class RiverThicknessExtractor {
        -List<> properties
        -^extractValues()
    }
    class TileTagExtractor {
        -List<> properties
        -^extractValues()
    }
    Extractor <|.. AltitudeExtractor
    Extractor <|.. EdgeTagExtractor
    Extractor <|.. NumRiversExtractor
    Extractor <|.. RiverExtractor
    Extractor <|.. RiverThicknessExtractor
    Extractor <|.. TileTagExtractor
}

AddRivers ..> AltitudeExtractor
AddRivers ..> AltitudeExtractor
AddRivers ..> EdgeTagExtractor
AddRivers ..> NumRiversExtractor
AddRivers ..> RiverExtractor
AddRivers ..> RiverThicknessExtractor
AddRivers ..> TileTagExtractor

package Properties {
    class PropertyAdder {
        -addProperty(Structs.Polygon, String, String)
        +addProperty(Structs.Segment, String, String)
        #addProperty(Structs.Vertex, String, String)
    }
}
package RandomNumberGenerator {
    class RandomNumber {
        -randomInstance: Random
        -setSeed()
        +setSeed(long)
    }
}

AddRivers ..> PropertyAdder
AddRivers ..> RandomNumber


@enduml